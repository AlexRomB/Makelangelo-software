name: Java CI with Maven

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flags:
          - "-Xms512m -Xmx1024m"            # Taille initiale et maximale du tas
          - "-XX:+UseG1GC"                  # Active le ramasse-miettes G1
          - "-XX:+PrintGCDetails"           # Affiche des détails sur les événements de GC
          - "-XX:+HeapDumpOnOutOfMemoryError" # Génère un vidage de tas en cas de manque de mémoire
          - "-Djava.compiler=NONE"          # Désactive le compilateur JIT pour tester l'impact de l'optimisation

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK
      uses: actions/setup-java@v4.2.1
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'

    - name: Build and Test with Maven and Flags
      run: |
        echo "Running build with flags: ${{ matrix.flags }}"
        ./mvnw -B verify -DargLine="${{ matrix.flags }}"
      timeout-minutes: 15

    - name: Get JaCoCo Coverage
      id: coverage
      run: |
        echo "Calculating coverage for flags: ${{ matrix.flags }}"
        coverage=$(python3 config/coverage.py target/site/jacoco/jacoco.csv) 
        echo "COVERAGE=$coverage" >> $GITHUB_ENV

    - name: Fail if coverage has not improved
      run: |
        coverage=$COVERAGE
        threshold=24.46
        if (( $(echo "$coverage - $threshold <= 0.1" | bc -l) )); then
          echo "Coverage is not improved."
          exit 1
        else
          echo "New coverage: $coverage%. Coverage is improved!"
        fi

    - name: Upload Coverage Report
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: "Coverage Report - Flags ${{ matrix.flags }}"
        path: target/site/jacoco
