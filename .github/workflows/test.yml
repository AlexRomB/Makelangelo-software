name: Java CI with Maven

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flag:
          - "-Dfile.encoding=UTF-8"
          - "-XX:+UseG1GC"
          - "-Xmx1g"
          - "-XX:+HeapDumpOnOutOfMemoryError"
          - "-XX:+ExitOnOutOfMemoryError"
          
    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-java@v4.2.1
      with:
        distribution: 'temurin'
        java-version: '17'
        cache: 'maven'

    - name: Log JVM Option in Use
      run: |
        export MAVEN_OPTS="${{ matrix.flag }}"
        echo "Running Maven build with JVM option: $MAVEN_OPTS"

    - name: Compile Project
      run: |
        ./mvnw -B compile
        echo "Compilation completed."

    - name: Run Tests with JVM Option
      run: |
        ./mvnw -B test
        echo "Tests completed."

    - name: Get JaCoCo Coverage
      id: coverage  
      run: |
        coverage=$(python3 config/coverage.py target/site/jacoco/jacoco.csv) 
        echo "Code coverage extracted: $coverage%"
        echo "COVERAGE=$coverage" >> $GITHUB_ENV
        
    - name: Set Sanitized Artifact Name
      run: |
        # Sanitize the flag by removing invalid characters
        sanitized_flag="${{ matrix.flag }}"
        sanitized_flag="${sanitized_flag//:/}"    # Remove colons
        sanitized_flag="${sanitized_flag//+}"     # Remove plus signs
        sanitized_flag="${sanitized_flag//-}"     # Remove hyphens
        echo "SANITIZED_FLAG=$sanitized_flag" >> $GITHUB_ENV

    - name: Upload Coverage Report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: "Coverage-Report-Flag-${{ env.SANITIZED_FLAG }}"
        path: target/site/jacoco
        retention-days: 7

    - name: Check Coverage Improvement
      run: |
        coverage=$COVERAGE
        threshold=24.46
        echo "Coverage threshold: $threshold, Current coverage: $coverage"
        if (( $(echo "$coverage - $threshold <= 0.1" | bc -l) )); then
          echo "Coverage has not improved."
          exit 1
        else
          echo "Coverage improved to $coverage%!"
        fi
